// Mocks generated by Mockito 5.4.6 from annotations
// in sairam_incubation/test/auth/auth_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:cloud_firestore/cloud_firestore.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sairam_incubation/Auth/Model/auth_user.dart' as _i2;
import 'package:sairam_incubation/Auth/Service/authentication_provider.dart'
    as _i5;
import 'package:sairam_incubation/Profile/Model/certificate.dart' as _i13;
import 'package:sairam_incubation/Profile/Model/department.dart' as _i9;
import 'package:sairam_incubation/Profile/Model/domains.dart' as _i10;
import 'package:sairam_incubation/Profile/Model/link.dart' as _i11;
import 'package:sairam_incubation/Profile/Model/media_items.dart' as _i12;
import 'package:sairam_incubation/Profile/Model/profile.dart' as _i4;
import 'package:sairam_incubation/Profile/Model/scholar_type.dart' as _i8;
import 'package:sairam_incubation/Profile/service/profile_cloud_firestore_provider.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthUser_0 extends _i1.SmartFake implements _i2.AuthUser {
  _FakeAuthUser_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCollectionReference_1<T extends Object?> extends _i1.SmartFake
    implements _i3.CollectionReference<T> {
  _FakeCollectionReference_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeProfile_2 extends _i1.SmartFake implements _i4.Profile {
  _FakeProfile_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthenticationProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthenticationProvider extends _i1.Mock
    implements _i5.AuthenticationProvider {
  MockAuthenticationProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> initialise() =>
      (super.noSuchMethod(
            Invocation.method(#initialise, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i2.AuthUser> signup({
    required String? emailId,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signup, [], {
              #emailId: emailId,
              #password: password,
            }),
            returnValue: _i6.Future<_i2.AuthUser>.value(
              _FakeAuthUser_0(
                this,
                Invocation.method(#signup, [], {
                  #emailId: emailId,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i2.AuthUser>);

  @override
  _i6.Future<_i2.AuthUser> login({
    required String? emailId,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#login, [], {
              #emailId: emailId,
              #password: password,
            }),
            returnValue: _i6.Future<_i2.AuthUser>.value(
              _FakeAuthUser_0(
                this,
                Invocation.method(#login, [], {
                  #emailId: emailId,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i2.AuthUser>);

  @override
  _i6.Future<void> logout() =>
      (super.noSuchMethod(
            Invocation.method(#logout, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<bool> isEmailVerified() =>
      (super.noSuchMethod(
            Invocation.method(#isEmailVerified, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<void> sendEmailVerification() =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> resetPassword({required String? email}) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [], {#email: email}),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}

/// A class which mocks [ProfileCloudFirestoreProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileCloudFirestoreProvider extends _i1.Mock
    implements _i7.ProfileCloudFirestoreProvider {
  MockProfileCloudFirestoreProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.CollectionReference<Map<String, dynamic>> get students =>
      (super.noSuchMethod(
            Invocation.getter(#students),
            returnValue: _FakeCollectionReference_1<Map<String, dynamic>>(
              this,
              Invocation.getter(#students),
            ),
          )
          as _i3.CollectionReference<Map<String, dynamic>>);

  @override
  _i6.Future<_i4.Profile> createNewProfile({required _i2.AuthUser? user}) =>
      (super.noSuchMethod(
            Invocation.method(#createNewProfile, [], {#user: user}),
            returnValue: _i6.Future<_i4.Profile>.value(
              _FakeProfile_2(
                this,
                Invocation.method(#createNewProfile, [], {#user: user}),
              ),
            ),
          )
          as _i6.Future<_i4.Profile>);

  @override
  _i6.Future<_i4.Profile?> getProfile({required _i2.AuthUser? user}) =>
      (super.noSuchMethod(
            Invocation.method(#getProfile, [], {#user: user}),
            returnValue: _i6.Future<_i4.Profile?>.value(),
          )
          as _i6.Future<_i4.Profile?>);

  @override
  _i6.Future<_i4.Profile> saveProfileInformation({
    String? profilePic,
    required String? fullName,
    required _i8.ScholarType? scholarType,
    required String? emailAddress,
    required String? phoneNumber,
    required _i9.Department? department,
    required String? dateOfBirth,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#saveProfileInformation, [], {
              #profilePic: profilePic,
              #fullName: fullName,
              #scholarType: scholarType,
              #emailAddress: emailAddress,
              #phoneNumber: phoneNumber,
              #department: department,
              #dateOfBirth: dateOfBirth,
            }),
            returnValue: _i6.Future<_i4.Profile>.value(
              _FakeProfile_2(
                this,
                Invocation.method(#saveProfileInformation, [], {
                  #profilePic: profilePic,
                  #fullName: fullName,
                  #scholarType: scholarType,
                  #emailAddress: emailAddress,
                  #phoneNumber: phoneNumber,
                  #department: department,
                  #dateOfBirth: dateOfBirth,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Profile>);

  @override
  _i6.Future<_i4.Profile> saveIdentityDetails({
    required String? studentId,
    required _i9.Department? department,
    required int? currentYear,
    required int? yearOfGraduation,
    required String? mentorName,
    required String? idCardPhoto,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#saveIdentityDetails, [], {
              #studentId: studentId,
              #department: department,
              #currentYear: currentYear,
              #yearOfGraduation: yearOfGraduation,
              #mentorName: mentorName,
              #idCardPhoto: idCardPhoto,
            }),
            returnValue: _i6.Future<_i4.Profile>.value(
              _FakeProfile_2(
                this,
                Invocation.method(#saveIdentityDetails, [], {
                  #studentId: studentId,
                  #department: department,
                  #currentYear: currentYear,
                  #yearOfGraduation: yearOfGraduation,
                  #mentorName: mentorName,
                  #idCardPhoto: idCardPhoto,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Profile>);

  @override
  _i6.Future<_i4.Profile> saveDomainPreferences(List<_i10.Domains>? domains) =>
      (super.noSuchMethod(
            Invocation.method(#saveDomainPreferences, [domains]),
            returnValue: _i6.Future<_i4.Profile>.value(
              _FakeProfile_2(
                this,
                Invocation.method(#saveDomainPreferences, [domains]),
              ),
            ),
          )
          as _i6.Future<_i4.Profile>);

  @override
  _i6.Future<_i4.Profile> saveSkillSet({
    required List<_i10.Domains>? skills,
    required String? resumeFile,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#saveSkillSet, [], {
              #skills: skills,
              #resumeFile: resumeFile,
            }),
            returnValue: _i6.Future<_i4.Profile>.value(
              _FakeProfile_2(
                this,
                Invocation.method(#saveSkillSet, [], {
                  #skills: skills,
                  #resumeFile: resumeFile,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Profile>);

  @override
  _i6.Future<_i4.Profile> savePortfolioLinks({
    required List<_i11.Link>? links,
    required List<_i12.MediaItems>? mediaList,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#savePortfolioLinks, [], {
              #links: links,
              #mediaList: mediaList,
            }),
            returnValue: _i6.Future<_i4.Profile>.value(
              _FakeProfile_2(
                this,
                Invocation.method(#savePortfolioLinks, [], {
                  #links: links,
                  #mediaList: mediaList,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Profile>);

  @override
  _i6.Future<_i4.Profile> saveCertificates({
    required List<_i13.Certificate>? certificates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#saveCertificates, [], {
              #certificates: certificates,
            }),
            returnValue: _i6.Future<_i4.Profile>.value(
              _FakeProfile_2(
                this,
                Invocation.method(#saveCertificates, [], {
                  #certificates: certificates,
                }),
              ),
            ),
          )
          as _i6.Future<_i4.Profile>);
}
